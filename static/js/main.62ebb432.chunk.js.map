{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h5/pages/Error404.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h5/pages/Junior.module.css","p2-homeworks/h5/pages/JuniorPlus.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routs.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","useState","visible","setVisible","visibleToggle","className","s","menuButton","onClick","wrapper","page","to","navActive","isActive","activeLink","Error404","block","src","alt","Message","props","message","image","avatar","text_field","name","text","time","messageData","HW1","Affair","currentStyle","affair","priority","style_high","style_middle","style_low","area","deleteAffairCallback","_id","buttonGrey","delete_button","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","errorStyle","superInput","activeButton","value","onChange","disabled","buttonAdd","errorClass","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","console","log","alert","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","key","SuperButton","red","finalClassName","disabledStyle","default","SuperCheckbox","onChangeChecked","children","checkbox","checkboxLabel","checked","HW4","setText","showAlert","setChecked","column","blue","disable","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","edit","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","oldState","PreJunior","Junior","JuniorPlus","PATH","Routs","path","element","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.62ebb432.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__1v1mo\",\"area\":\"Affairs_area__11xsY\",\"buttonGrey\":\"Affairs_buttonGrey__2gF8y\",\"style_high\":\"Affairs_style_high__EPoEy\",\"style_middle\":\"Affairs_style_middle__2Fbpq\",\"style_low\":\"Affairs_style_low__rY_aY\",\"delete_button\":\"Affairs_delete_button__qs5ME\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__3-oeQ\",\"menuButton\":\"Header_menuButton__WZsSX\",\"page\":\"Header_page__qkJ-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Greeting_superInput__FQN60\",\"errorClass\":\"Greeting_errorClass__2nH0A\",\"errorStyle\":\"Greeting_errorStyle__2wssW\",\"buttonGrey\":\"Greeting_buttonGrey__D6Crs\",\"buttonAdd\":\"Greeting_buttonAdd__2QamO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3Kbpi\",\"image\":\"Message_image__3ne1R\",\"text_field\":\"Message_text_field__6_fS6\",\"name\":\"Message_name__3ilSW\",\"text\":\"Message_text__129-y\",\"time\":\"Message_time__2K1Zx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"SuperInputText_error__21NfT\",\"errorStyle\":\"SuperInputText_errorStyle__1HOiR\",\"superInput\":\"SuperInputText_superInput__37p_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__BsFAX\",\"column\":\"HW4_column__3SZgq\",\"testSpanError\":\"HW4_testSpanError__xlQgL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2h-Yy\",\"red\":\"SuperButton_red__2t6TY\",\"disabledStyle\":\"SuperButton_disabledStyle__2cD8a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1SRiv\",\"spanClassName\":\"SuperCheckbox_spanClassName__152ag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error404_wrapper__M_eLv\",\"block\":\"Error404_block__36WGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2-Ffi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"edit\":\"SuperEditableSpan_edit__1_WO8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Junior_wrapper__3U0qm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"JuniorPlus_wrapper__CcJGb\"};","import React, {useState} from 'react'\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n\r\n    let [visible, setVisible] = useState(false)\r\n\r\n    const visibleToggle = () => {\r\n        setVisible(!visible)\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                !visible && <div\r\n                  className={s.menuButton} onClick={visibleToggle}>\r\n                  MENU\r\n                </div>\r\n            }\r\n\r\n            {\r\n                visible &&\r\n                <div className={s.wrapper} onClick={visibleToggle}>\r\n                  <div className={s.page}>\r\n                    <NavLink to='/pre-junior'\r\n                             className={(navActive) => navActive.isActive ? s.activeLink : \"\"}>preJunior</NavLink>\r\n                  </div>\r\n                  <div className={s.page}>\r\n                    <NavLink to='/junior'\r\n                             className={(navActive) => navActive.isActive ? s.activeLink : \"\"}>Junior</NavLink>\r\n                  </div>\r\n                  <div className={s.page}>\r\n                    <NavLink to='/junior-plus'\r\n                             className={(navActive) => navActive.isActive ? s.activeLink : \"\"}>Junior+</NavLink>\r\n                  </div>\r\n                </div>\r\n            }\r\n\r\n            {/*<div className={s.headerTwo}>*/}\r\n            {/*    <div className={s.pageTwo}>preJunior</div>*/}\r\n            {/*    <div className={s.pageTwo}>Junior</div>*/}\r\n            {/*    <div className={s.pageTwo}>Junior+</div>*/}\r\n            {/*    <div className={s.block}></div>*/}\r\n\r\n            {/*</div>*/}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div className={s.block}>\r\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRjpppGLQ4raRPODyEyN1U_ZEpiaO-d9NSeOKBkxpNOwQ2AW_JsfE40dKFaxKvK7c-qej8&usqp=CAU\" alt=\"samurai\"/>\r\n                <div>У самурая нет цели... У самурая есть только путь</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\nexport type MessageDataPropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\ntype MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.image}>\r\n                <img src={props.avatar} alt={'avatar'}/>\r\n            </div>\r\n            {/*не нашел решения для уголка подсмотрел\r\n            вариант у Игната:\r\n            <div className={s.angle}></div>\r\n            */}\r\n\r\n            <div className={s.text_field}>\r\n                <div className={s.name}>{props.name}</div>\r\n                <div className={s.text}>{props.message} <span className={s.time}>{props.time}</span></div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message, {MessageDataPropsType} from \"./Message\";\r\n\r\nconst messageData: MessageDataPropsType = {\r\n    // avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    avatar: 'https://w7.pngwing.com/pngs/394/149/png-transparent-youtube-disc-jockey-avatar-pool-live-tour-lunar-republic-the-plight-of-cloudsdale-avatar-steam-television-mammal-vertebrate.png',\r\n    name: 'Katya',\r\n    message: 'Добро пожаловать в инкубатор))',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h4>Homeworks 1</h4>\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from \"./Affairs.module.css\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any +\r\n    deleteAffairCallback: (_id: number) => void // need to fix any +\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n    const styleByPriority = () => {\r\n        if(props.affair.priority === 'high') {\r\n            return s.style_high\r\n        }\r\n        if(props.affair.priority === 'middle') {\r\n            return s.style_middle\r\n        }\r\n        if(props.affair.priority === 'low') {\r\n            return s.style_low\r\n        }\r\n    }\r\n\r\n    let currentStyle = styleByPriority()\r\n\r\n    return (\r\n        <div>\r\n            <span className={s.area + ' ' + currentStyle}>{props.affair.name}</span>\r\n\r\n            <span> <button onClick={deleteCallback} className={s.buttonGrey + ' ' + s.delete_button}>x</button></span>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React, {Dispatch} from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter:  Dispatch<React.SetStateAction<FilterType>>\r\n    //вариант типизации Игната: setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')} // need to fix\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll} className={s.buttonGrey}>All</button>\r\n            <button onClick={setHigh} className={s.buttonGrey + ' ' + s.style_high}>High</button>\r\n            <button onClick={setMiddle} className={s.buttonGrey + ' ' + s.style_middle}>Middle</button>\r\n            <button onClick={setLow} className={s.buttonGrey + ' ' + s.style_low}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): AffairType[] => {\r\n    if (filter === 'all') return affairs\r\n    else return affairs.filter(f => f.priority === filter)\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): AffairType[] => {\r\n    return affairs.filter(f => f._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h4>Homeworks 2</h4>\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any +\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any +\r\n    error: string // need to fix any +\r\n    totalUsers: number // need to fix any +\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error === 'ERROR' ? s.errorStyle : s.superInput// need to fix with (?:) +\r\n    const errorClass = error === 'ERROR' ? s.errorStyle : s.superInput\r\n    const activeButton =  error === 'ERROR'\r\n\r\n    return (\r\n        <div>\r\n            <input value={name}\r\n                   onChange={setNameCallback}\r\n                   className={inputClass}/>\r\n\r\n            <button onClick={addUser}\r\n                    disabled={activeButton}\r\n            className={s.buttonGrey + ' ' + s.buttonAdd}>add</button>\r\n\r\n            <span>{totalUsers}</span>\r\n            <div>\r\n                <span className={s.errorClass}>{error}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any +\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n\r\n    const [name, setName] = useState<string>('') // need to fix any +\r\n    const [error, setError] = useState<string>('') // need to fix any +\r\n\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // debugger\r\n        let validName = e.currentTarget.value.trim()\r\n        if (validName) {\r\n            setName(e.currentTarget.value)\r\n            setError('')\r\n            // лучше обнулять ошибку при условия, что она была: error && setError('')\r\n        } else {\r\n            // name && setName('')\r\n            setError('ERROR')\r\n\r\n        }\r\n        console.log()\r\n    }\r\n    const addUser = () => {\r\n        if(name !== '') {\r\n            addUserCallback(name)\r\n            alert(`Hello  ! ${name}`) // need to fix +\r\n            setName('')\r\n        }\r\n\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix +\r\n\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any +\r\n    name: string // need to fix any +\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any +\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any +\r\n        if(name) {\r\n            let user = {_id: v1(), name: name}\r\n            setUsers([user, ...users]) // need to fix +\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h4>Homeworks 3</h4>\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = (!restProps.value)\r\n        ? `${s.errorStyle} ${className ? s.superInput : ''}`\r\n        : s.superInput // need to fix with (?:) and s.superInput\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/*<input className={s.superInput}/>*/}\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${restProps.disabled\r\n        ? s.disabledStyle\r\n        : red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.checkboxLabel}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {/*<span className={s.spanClassName}></span>*/}\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'ERROR'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h4>Homeworks 4</h4>\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    disabled\r\n                             className={s.disable}>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    Check me\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${'сделать красивый стиль для спана'} ${s.edit}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        &#10002; {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        let oldState = restoreState('editable-span-value', 'empty storage')\r\n        setValue(oldState)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from \"react\";\r\nimport s from './Junior.module.css'\r\nexport const Junior = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            Samurai on the way...\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './JuniorPlus.module.css'\r\n\r\nexport const JuniorPlus = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            Samurai on the way...\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport {Junior} from \"./pages/Junior\";\r\nimport {JuniorPlus} from \"./pages/JuniorPlus\";\r\n\r\n\r\nexport const PATH = {\r\n    START_PAGE: '',\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus',\r\n    NOT_FOUND: '*'\r\n}\r\n\r\nfunction Routs() {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n\r\n                <Route path={PATH.START_PAGE} element={<PreJunior/>}/>\r\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\r\n                <Route path={PATH.NOT_FOUND} element={<Error404/>}/>\r\n\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routs\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport Routs from './Routs'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                <Header/>\r\n                <Routs/>\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>\r\n                <h3>REACT HOMEWORKS:</h3>\r\n            </div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}